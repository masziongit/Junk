{"version":3,"sources":["../src/db.js"],"names":["logger","callback","oracleCon","process","env","DB_USER","DB_CONNECT_STRING","debug","JSON","stringify","password","decrypt","DB_PASSWORD","Object","assign","config","oracle_option","oracledb","require","createPool","then","pool","getConnection","conn","crypto","algorithm","text","decipher","createDecipher","dec","update","final"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,MAAD,EAASC,QAAT,EAAsB;AACjC;;AAEA,QAAMC,YAAY;AACd,gBAAQC,QAAQC,GAAR,CAAYC,OADN;AAEd,yBAAiBF,QAAQC,GAAR,CAAYE;AAFf,KAAlB;AAIAN,WAAOO,KAAP,sBAAgCC,KAAKC,SAAL,CAAeP,SAAf,CAAhC;AACAA,cAAUQ,QAAV,GAAqBC,QAAQR,QAAQC,GAAR,CAAYQ,WAApB,CAArB;;AAEAC,WAAOC,MAAP,CAAcZ,SAAd,EAAwBa,iBAAOC,aAA/B;;AAEA,QAAMC,WAAWC,QAAQ,UAAR,CAAjB;AACAD,aAASE,UAAT,CAAoBjB,SAApB,EACKkB,IADL,CACU,UAACC,IAAD,EAAU;AACZ,eAAOA,KAAKC,aAAL,EAAP;AACH,KAHL,EAGOF,IAHP,CAGY,UAACG,IAAD,EAAU;AAClBtB,iBAASsB,IAAT;AACH,KALD;AAOH,C;;AAED,IAAMC,SAASN,QAAQ,QAAR,CAAf;AAAA,IACIO,YAAYV,iBAAOS,MAAP,CAAcC,SAD9B;AAAA,IAEIf,WAAWK,iBAAOS,MAAP,CAAcd,QAF7B;;AAIA,SAASC,OAAT,CAAiBe,IAAjB,EAAsB;AAClB,QAAID,YAAYV,iBAAOS,MAAP,CAAcC,SAA9B;AACA,QAAIf,WAAW,sBAAf;AACA,QAAIiB,WAAWH,OAAOI,cAAP,CAAsBH,SAAtB,EAAgCf,QAAhC,CAAf;AACA,QAAImB,MAAMF,SAASG,MAAT,CAAgBJ,IAAhB,EAAqB,KAArB,EAA2B,MAA3B,CAAV;AACAG,WAAOF,SAASI,KAAT,CAAe,MAAf,CAAP;AACA,WAAOF,GAAP;AACH","file":"db.js","sourcesContent":["import config from './config.json';\r\n\r\nexport default (logger, callback) => {\r\n    // connect to a database if needed, then pass it to `callback`:\r\n\r\n    const oracleCon = {\r\n        \"user\": process.env.DB_USER,\r\n        \"connectString\": process.env.DB_CONNECT_STRING,\r\n    }\r\n    logger.debug(`Database config ${JSON.stringify(oracleCon)}`)\r\n    oracleCon.password = decrypt(process.env.DB_PASSWORD)\r\n\r\n    Object.assign(oracleCon,config.oracle_option)\r\n\r\n    const oracledb = require('oracledb');\r\n    oracledb.createPool(oracleCon)\r\n        .then((pool) => {\r\n            return pool.getConnection();\r\n        }).then((conn) => {\r\n        callback(conn)\r\n    })\r\n\r\n}\r\n\r\nconst crypto = require('crypto'),\r\n    algorithm = config.crypto.algorithm,\r\n    password = config.crypto.password;\r\n\r\nfunction decrypt(text){\r\n    var algorithm = config.crypto.algorithm;\r\n    var password = 'jwJ3j6bvHEtRrHUpbtf1';\r\n    var decipher = crypto.createDecipher(algorithm,password)\r\n    var dec = decipher.update(text,'hex','utf8')\r\n    dec += decipher.final('utf8');\r\n    return dec;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}